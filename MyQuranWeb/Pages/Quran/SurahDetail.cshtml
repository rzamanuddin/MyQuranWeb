@page "{id:int?}/{AyahID?}"
@model MyQuranWeb.Pages.Quran.SurahDetailModel
@{
    ViewData["Title"] = $"Surat {(Model.Surah != null ? Model.Surah.NameLatin : "")} Arab, Latin & Terjemah";
}
@*<script src="~/lib/jquery/dist/jquery.min.js"></script>*@

@if (!string.IsNullOrWhiteSpace(Model.ErrorMessage))
{
    <div id="error" class="alert alert-danger">
        <span>@Model.ErrorMessage</span>
    </div>
}
else
{
    <div id="snackbar"></div>
    <div class="form-group form-row">
        <div class="col-12 text-right">
            <partial name="_Navigation" model="Model.Navigation" />
        </div>
    </div>
    <div class="form-group form-row">
        @*<div class="col-form-label text-right col-lg-9 col-md-7 col-sm-7">
    </div>*@
        <label class="col-lg-9 col-md-7 col-sm-7 col-4 text-right font-weight-bold" for="@Model.ID">Pilih :</label>
        @*<div class="offset-lg-9 offset-md-7 offset-sm-7 offset-7 col-lg-2 col-md-3 col-sm-3 col-3">*@
        <div class="col-lg-2 col-md-3 col-sm-3 col-5">
            <select asp-for="@Model.ID" asp-items="Model.SurahList" class="form-control form-control-sm searchList" id="searchSurahID">
            </select>
        </div>
        <div class="col-sm-2 col-md-2 col-lg-1 col-3">
            <select asp-for="@Model.AyahID" asp-items="Model.AyahList" class="form-control form-control-sm searchList" id="searchAyahID">
            </select>
        </div>
    </div>
    <div class="card">
        <div class="card-header text-center">
            <p class="h2">@(Model.Surah != null ? Model.Surah.HeaderOnly : "")</p>
        </div>
        <div class="card-body">
            @{
                string qariUrl = "";
                if (!string.IsNullOrWhiteSpace(Request.Cookies["qariSetting"]))
                {
                    if (Request.Cookies["qariSetting"] == "0")
                    {
                        qariUrl = "https://server8.mp3quran.net/download/afs";
                    }
                    else if (Request.Cookies["qariSetting"] == "1")
                    {
                        qariUrl = "https://server11.mp3quran.net/download/sds";
                    }
                    else if (Request.Cookies["qariSetting"] == "2")
                    {
                        qariUrl = "https://server8.mp3quran.net/download/mtrod";
                    }
                }
                else
                {
                    qariUrl = "https://server8.mp3quran.net/download/afs";
                }
            }
            <div class="form-group form-row">
                <div class="col text-center">
                    <audio preload="none" controls>
                        <source src="@($"{qariUrl}/{Model.Surah.Id:000}.mp3")" type="audio/mp3" />
                    </audio>
                    @* <div class="btn-group btn-group-lg" role="group"> *@
                        @* <button id="play"  type="button" class="btn btn-outline-dark" data-toggle="tooltip" title="Play/Pause"><i id="playIcon" class="fa fa-play"></i></button> *@
                        @* <button id="pause" type="button" class="btn btn-outline-dark" data-toggle="tooltip" title="Pause"><i id="pauseIcon" class="fa fa-pause"></i></button> *@
                        @* <button id="stop"  type="button" class="btn btn-outline-dark" data-toggle="tooltip" title="Stop"><i id="stopIcon" class="fa fa-stop"></i></button> *@
                    @* </div> *@
                </div>
            </div>
            @{
                string hideTransliterasi = "";
                if (!string.IsNullOrWhiteSpace(Request.Cookies["transliterasiSetting"])
                    && Request.Cookies["transliterasiSetting"] == "0")
                {
                    hideTransliterasi = "hide text-hide";
                }

                string hideTerjemahan = "";
                if (!string.IsNullOrWhiteSpace(Request.Cookies["terjemahanSetting"])
                    && Request.Cookies["terjemahanSetting"] == "0")
                {
                    hideTerjemahan = "hide text-hide";
                }

                string fontArab = "arab";
                string bismillah = "بِسْمِ اللّٰهِ الرَّحْمٰنِ الرَّحِيْمِ";
                if (!string.IsNullOrWhiteSpace(Request.Cookies["rasmSetting"])
                    && Request.Cookies["rasmSetting"] == "1")
                {
                    fontArab = "arabUthmani";
                    bismillah = "بِسۡمِ ٱللَّهِ ٱلرَّحۡمَٰنِ ٱلرَّحِيمِ";
                }

                string tafsir = "Kemenag";
                if (!string.IsNullOrWhiteSpace(Request.Cookies["tafsirSetting"])
                    && Request.Cookies["tafsirSetting"] == "1")
                {
                    tafsir = "Al-Jalalain";
                }

                if (Model.Surah != null && Model.ID.HasValue && Model.ID.Value != 1 && Model.ID.Value != 9)
                {
                    <div class="form-group">
                        <div class="col-12">
                            <p class="text-center h2 @fontArab">@bismillah</p>
                        </div>
                        <div class="col-12 text-left">
                            <p class="text-center">bismillāhir-raḥmānir-raḥīm</p>
                        </div>
                        <div class="col-12 text-left">
                            <p class="translate text-center"><small>Dengan nama Allah Yang Maha Pengasih, Maha Penyayang.</small></p>
                        </div>
                    </div>
                }
            }

            @for (int i = 0; i < Model.Ayahs.Count; i++)
            {
                var alternateColor = "";
                string playerID = "player" + Model.Ayahs[i].AyahId.ToString();
                var bookmarks = "fa-bookmark-o";
                if (!string.IsNullOrEmpty(Request.Cookies[Model.Ayahs[i].Id.ToString()]))
                {
                    bookmarks = "fa-bookmark";
                }

                @if (@Model.Ayahs[i].AyahId % 2 == 1) { alternateColor = "alert-secondary"; }
                <div class="form-group form-row @alternateColor text-dark" id="div_@Model.Ayahs[i].AyahId">
                    @*<div class="col-sm-2 col-md-2 col-lg-1">*@
                    <div class="col-2 text-left small">
                        <p>@Model.Ayahs[i].AyahId</p>
                    </div>
                    <div class="col-10 text-right">
                        <div class="btn-group btn-group-sm mp3Player" role="group">
                            <button type="button" class="btn btn-outline-dark" data-toggle="tooltip" title="Play/Pause" onclick="playAudio('@(i+1)')" id="btnAudio@(i+1)"><i id="playBtn@(i+1)" class="fa fa-play"></i></button>
                            @*<button type="button" class="btn btn-outline-dark" data-toggle="tooltip" title="Mute / Unmute" onclick="document.getElementById('@playerID').muted=!document.getElementById('@playerID').muted"><i id="volumeBtn(@i+1)" class="fa fa-volume-up"></i></button>*@
                            <button type="button" class="btn btn-outline-dark" data-toggle="tooltip" title="Salin Ayat & Terjemah" id="@("btnCopy" + i)" onclick='copyToClipboard("@i","@Model.Ayahs[i].AyahId","@Model.ID","@Model.Ayahs[i].ReadText","@Model.Ayahs[i].ReadIndo","@Model.Ayahs[i].TranslateIndo")'><i class="fa fa-clone"></i></button>
                            @*<button type="button" class="btn btn-outline-dark" data-toggle="modal" title="Tafsir Kemenag" data-target="#tafsirModal" data-tafsir="@Model.Ayahs[i].Tafsir.Kemenag" data-title="@($"Tafsir Kemenag Q.S. {Model.Surah.Id}:{i + 1}")"><i class="fa fa-book"></i></button>*@
                            <button type="button" class="btn btn-outline-dark" data-toggle="modal" title="Tafsir @tafsir" data-target="#tafsirModal" data-id="@Model.Ayahs[i].Id" data-surahid="@Model.Ayahs[i].SurahId" data-ayahid="@Model.Ayahs[i].AyahId" data-title="@($"Tafsir {@tafsir} Q.S. {Model.Surah.Id}:{i + 1}")"><i class="fa fa-book"></i></button>
                            <button type="button" class="btn btn-outline-dark" data-toggle="tooltip" title="Bookmark" id="@("btnBookmark" + Model.Ayahs[i].Id)" onclick="setCookie('@Model.Ayahs[i].Id','@Model.Ayahs[i].Id','100')"><i id="bookmark@(Model.Ayahs[i].Id)" class="fa @bookmarks"></i></button>
                            <button type="button" class="btn btn-outline-dark" data-toggle="tooltip" title="Tandai Terakhir Dibaca" id="@("btnLastAyah" + Model.Ayahs[i].Id)" onclick='setLastAyah("100","@Model.ID","@Model.Surah.NameLatin","@Model.Ayahs[i].AyahId","@Model.Ayahs[i].Id","@Model.Ayahs[i].JuzDetail.JuzId")'><i id="lastAyah@(Model.Ayahs[i].Id)" class="fa fa-sticky-note"></i></button>

                            <audio id="@playerID" onpause="pauseAudio('@(i+1)')">
                                <source src="@($"{Model.AppSettingOption.MP3UrlSetting}{Model.ID:000}{Model.Ayahs[i].AyahId:000}.mp3")" type="audio/mp3" />
                            </audio>
                            @*<a class="btn btn-outline-dark" _blank" href="~/Quran/JuzDetail/1"><i class="fa fa-pause"></i></a>*@
                            @*<button type="button" onclick="showTafsir('@Model.ID', '@(i + 1)')" id="@($"btnTafsir{Model.Ayahs[i].AyahId}")">Tafsir</button>*@
                        </div>
                    </div>
                    @*<div class="col-sm-10 col-md-10 col-lg-11 text-right">*@
                    <div class="col-12 text-right">
                        <p class="h2 @fontArab">@(fontArab == "arab" ? Model.Ayahs[i].ReadText : Model.Ayahs[i].ReadTextUthmani)</p>
                    </div>
                    <div class="col-12 text-justify @hideTransliterasi">
                        <p>@Model.Ayahs[i].ReadIndo</p>
                    </div>
                    <div class="col-12 text-justify @hideTerjemahan">
                        <p class="translate"><small>@Model.Ayahs[i].TranslateIndo</small></p>
                    </div>
                </div>
            }
            <partial name="_Navigation" model="@Model.Navigation" />
        </div>
    </div>
    <partial name="_TafsirModal" />
}

<style type="text/css">
    .smartControl {
        top: 3em;
        padding-left: 1em;
        z-index: 1;
    }

    .control {
        position: sticky;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {
        var websiteUrl = '@Model.AppSettingOption.WebSiteName';

        var ayahID = $("#searchAyahID").val();
        scrollToAyah(ayahID);

        $("#btnSearch").click(function () {
            ayahID = $("#searchAyahID").val();
            scrollToAyah(ayahID);
        });

        $('#txtSearch').on('keypress', function (e) {
            if (e.which === 13) {
                scrollToAyah(ayahID);
            }
        });

     //    var playList = [];
     //    var pad = "000";
     //    for (let i = 1; i <= @Model.Surah.NumberOfAyah; i++) {
     //        let str = "" + i
     //        let ayah = pad.substring(0, pad.length - str.length) + str;

     //        str = "" + @Model.Surah.Id;
     //        let surah = pad.substring(0, pad.length - str.length) + str;
     //        playList.push('@($"{Model.AppSettingOption.MP3UrlSetting}")' + surah + ayah + '.mp3');
     //    }
        
     //    $("#stop").addClass(" d-none");

     //    var currentTrackIndex = 0;    
	    // var delayBetweenTracks = 2000;

     //    var audioElement = document.createElement('audio',);
     //    audioElement.setAttribute('id', "audioElement");
     //    audioElement.setAttribute('src', playList[0]);
     //    document.body.appendChild(audioElement);
	    // audioElement.addEventListener("ended",function(e) {	
		   //  currentTrackIndex++;
		   //  if (currentTrackIndex < playList.length) {
			  //   audioElement.src = playList[currentTrackIndex];
			  //   audioElement.pause();
			  //   audioElement.load();
			  //   audioElement.play();
     //            //scrollToAyah(currentTrackIndex);
		   //  }
		   //  else
		   //  {
			  //   audioElement.currentTime = 0;
		   //  }
     //    }, false);
    
     //    $('#play').click(function() {
     //        //audioElement.play();
     //        playAudioSurah("playIcon");
     //        $("#stop").removeClass(" d-none");
     //    });
    
     //    $('#pause').click(function() {
     //        audioElement.pause();
     //        $("#status").text("Status: Paused");
     //    });
    
     //    $('#stop').click(function () {
     //        currentTrackIndex = 0;
     //        audioElement.setAttribute('src', playList[currentTrackIndex]);
     //        audioElement.currentTime = 0;
     //        audioElement.pause();
     //        $("#playIcon").removeClass();
     //        $("#playIcon").addClass("fa fa-play");
     //        $("#stop").addClass(" d-none");
     //    });

        $('#tafsirModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget); // Button that triggered the modal
            //var recipient = button.data('tafsir'); // Extract info from data-* attributes
            var id = button.data('id');
            var ayahId = button.data('ayahid');
            var surahId = button.data('surahid');
            // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
            // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: websiteUrl + '/Quran/TafsirDetail?handler=Tafsir&surahId=' + surahId + "&ayahId=" + ayahId,
                //url: websiteUrl + '/Quran/SurahDetail?handler=Tafsir&id=' + id,
                /*data: "{'name':'" + $("#<%=txtFilterCustomer.ClientID%>").val() + "'}",*/
                //data: city,
                dataType: "json",
                success: function (data) {
                    var modal = $('#tafsirModal');
                    modal.find('.modal-title').text(button.data('title'));
                    modal.find('.modal-body #tafsirText').html(data);
                },
                failure: function (response) {
                    /*alert(response.responseText);*/
                    $.confirm({
                        title: 'Error',
                        content: response.responseText,
                        autoClose: 'ok|2000',
                        buttons: {
                            ok: {
                                text: 'OK',
                                action: function () {

                                }
                            }
                        }
                    });
                }
            });

            //var modal = $(this);
            ////modal.find('.modal-title').text('New message to ' + recipient)
            ////modal.find('.modal-body textarea').val(recipient)
            //modal.find('.modal-title').text(button.data('title'));
            //modal.find('.modal-body #tafsirText').html(recipient);
        });

        //$('.searchList').on('change', function () {
        $('#searchSurahID').on('change', function () {
            //ways to retrieve selected option and text outside handler
            //console.log('Changed option value ' + this.value);
            //console.log('Changed option text ' + $(this).find('option').filter(':selected').text());
            var origin = window.location.origin;
            window.location.replace(websiteUrl + "/Quran/SurahDetail/" + $(this).val() + '/1');
            //alert(origin + "Quran/SurahDetail/" + this.value);
        });

        $('#searchAyahID').on('change', function () {
            var origin = window.location.origin;
            scrollToAyah($(this).val());
        });
    });

</script>
